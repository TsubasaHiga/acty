@charset "utf-8";

@use 'sass:map';
@use 'sass:math';
@use 'sass:color';

// rem
@function rem($num, $size: md) {
  @if $size == md {
    @return #{math.div($num, 16)}rem;
  } @else if $size == sm {
    @return #{math.div(math.div($num, 2), 16)}rem;
  }
}

// percent
@function percent($num, $size: md) {
  @if $size == md {
    @return (math.div($num, 1600)) * 100%;
  } @else if $size == sm {
    @return (math.div($num, 375)) * 100%;
  }
}

// vw
@function vw($num, $size: md) {
  @if $size == md {
    @return (math.div($num, 1600)) * 100vw;
  } @else if $size == sm {
    @return (math.div($num, 375)) * 100vw;
  }
}

// vws
@function vws($num, $divide-ratio: 1) {
  $w: math.div($num, $divide-ratio);

  @return (math.div($w, 375)) * 100vw;
}

// vh
@function vh($num, $size: md) {
  @if $size == md {
    @return (math.div($num, 948)) * 100vh;
  } @else if $size == sm {
    @return (math.div($num, 844)) * 100vh;
  }
}

// convert-rgb
@function convert-rgb($color) {
  @return color.channel($color, 'red') color.channel($color, 'green') color.channel($color, 'blue');
}

// gcd
@function gcd($a, $b) {
  @if $b == 0 {
    @return $a;
  } @else {
    @return gcd($b, $a % $b);
  }
}
